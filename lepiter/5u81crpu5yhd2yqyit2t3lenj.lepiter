{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:07.840899+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:41.118383+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JcUGI3OMDQCPzvMNBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : " Posted on January 25, 2000 by Bill Wake "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:15.084458+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:29.152993+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "S3kzJHOMDQCP0XGWBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[](https://xp123.com/articles/the-testcode-cycle-in-xp-part-1-model/)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:45.0338+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:34:45.0338+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cDsIJnOMDQCP034/BwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This paper demonstrates the development of a small bibliographic system using Extreme Programming techniques. Part 1 shows development of the model; part 2 shows development of the associated user interface.\n\nSpecifically, it shows how unit tests and simple design work together while programming. Observe how the coding process occurs in small steps, just enough implementation to make each test run. There's a rhythm to it, like a pendulum of a clock: test a little, code a little, test a little, code a little. (To bring this out, we'll align test code to the left of the page, and application code to the right.)\n\nFor this example, suppose we have bibliographic data with author, title, and year of publication. Our goal is to write a system that can search that information for values we specify. We have in mind an interface something like this:"
			},
			{
				"__type" : "pictureSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:38:53.277653+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:39:19.079218+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8zHdNHOMDQCP1sIPBwOjYg=="
				},
				"url" : "attachments/5u81crpi1uuo8k86nwqbntuz2/gui1.gif"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:10.220694+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:14.991345+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "TzC7OHOMDQCP2FLJBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A search interface"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:26.76407+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:26.76407+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wafHOXOMDQCP2/9hBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We'll divide our work into two parts: the model and the user interface.\n\nFor our model, we have a collection of Documents, which know their metadata. A Searcher knows how to find Documents: given a Query, it will return a Result (a set of Documents). We'll create our unit tests (and our classes) bottom-up: Document, Result, Query, and Searcher."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:43.505936+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:44.252889+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2xAyO3OMDQCP3vayBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Document, Result, and Query"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:48.231673+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:40:51.13941+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mIKKO3OMDQCP4Q2OBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Document"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:09.931184+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:09.931184+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "g2PrO3OMDQCP4uduBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A Document needs to know its author, title, and year. We'll start with a \"data bag\" classs, beginning with its test:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:40.277356+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:40.277356+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0znEPnOMDQCP5k+8BwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "public void testDocument() {\n    Document d = new Document(\"a\", \"t\", \"y\");\n    assertEquals(\"a\", d.getAuthor());\n    assertEquals(\"t\", d.getTitle());\n    assertEquals(\"y\", d.getYear());\n}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:42:06.821597+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:42:06.821597+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "x7lJQHOMDQCP6WsnBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This test doesn't compile (as we haven't created the Document class yet). Create the class with stubbed-out methods.\n\nRun the test again to make sure it fails. This may seem funny – don't we want the tests to pass? Yes, we do. But by seeing them fail first, we get some assurance that the test is valid. And once in a while, a test passes unexpectedly: \"that's interesting!\"\n\nFill in the constructor and the methods to make the test pass."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:42:47.024785+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:42:47.024785+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "A4K/QnOMDQCP7GHcBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's highlight this mini-process:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:43:04.419139+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:43:06.963928+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7ZS9Q3OMDQCP7bnPBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[[The Test/Code Cycle in XP]]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:08.218042+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:41:08.218042+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GznoPHOMDQCP4+2/BwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:44:53.596163+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:44:53.596163+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2KFCSnOMDQCQB4yEBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This process ensures that you've seen the test both fail and pass, which gives you assurance that the test did test something, that your change made a difference, and that you've added valued functionality."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:10.579616+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:10.579616+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4jofS3OMDQCQCD2+BwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Some people will advocate not bothering to test simple setter and getter methods. (\"They can't possibly be wrong.\", \"It's a pain to write a bunch of getter/setter tests.\") I tend to write the tests anyway:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:49.913003+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:49.913003+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GYSyTXOMDQCQCjMTBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "* It doesn't take that much time to write the test, and it's certainly not hard, but it gives you that extra edge. (\"You thought you were sure it's ok; now you have a test that demonstrates it.\")"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:51.533873+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:51.533873+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hkDLTXOMDQCQC1buBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "* A test will often have a longer lifetime than the code it's testing. The test is there so when you add caching, or don't create objects until required, or add logging, etc., you still have assurance that the original function will work.\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:27.196261+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:45:51.538563+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "lUEwTHOMDQCQCaZsBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "* Boring tests full of setters and getters are often trying to tell you something: the class may not be pulling its weight. When a class is almost a \"struct\", it's often a sign that the responsibilities aren't distributed right between classes.\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:03.07336+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:05.708574+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+PtFTnOMDQCQDDCtBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Result"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:32.620864+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:37.24067+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hDIwUHOMDQCQDuTOBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A **Result** needs to know two things: the total number of items, and the list of Documents it contains. First we'll test that an empty result has no items."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:48.741876+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:48.741876+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "v84oUXOMDQCQD5zLBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "public void testEmptyResult() {\n    Result r = new Result();\n    assert (\"count=0 for empty result\", r.getCount() == 0);\n}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:08.778029+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-05T22:46:09.145555+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "rVqpTnOMDQCQDdfBBwOjYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[…]"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-11-05T22:33:53.967595+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-11-05T22:33:53.967595+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "The Test/Code Cycle in XP, Part 1: Model"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "6f140623-738c-0d00-8fcd-a1650703a362"
	}
}